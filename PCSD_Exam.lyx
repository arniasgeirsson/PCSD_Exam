#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
PCSD
\begin_inset Newline newline
\end_inset

Final Exam
\end_layout

\begin_layout Author
Arni Asgeirsson - lwf986
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
- Introduction to this report
\end_layout

\begin_layout Standard
- Introduction to the given assignment
\end_layout

\begin_layout Standard
- Overview of the hand-in.
\end_layout

\begin_layout Standard
- Overview of the appendix
\end_layout

\begin_layout Standard
- How is the general structure of this report? (does it make sense in this
 one?)
\end_layout

\begin_layout Section
Exercises
\end_layout

\begin_layout Subsection
Question 1: Proximity
\end_layout

\begin_layout Subsection
Question 2: Parallelism
\end_layout

\begin_layout Section
Programming Task
\end_layout

\begin_layout Paragraph
Development Environment
\end_layout

\begin_layout Standard
I use JDK 6
\end_layout

\begin_layout Standard
Developed in Eclipse version Kepler ?
\end_layout

\begin_layout Standard
JUnit version for my tests?
\end_layout

\begin_layout Standard
I use Jetty version 9.1.1v20140108
\begin_inset Foot
status open

\begin_layout Plain Layout
Download link http://download.eclipse.org/jetty/stable-9/dist/
\end_layout

\end_inset

 -> No, I use the ones from assignment 4 (same as all assignments)
\end_layout

\begin_layout Standard
Use xsteam 1.4.5, same as assignments (actually 1.4.6 atm)
\end_layout

\begin_layout Paragraph
Additions to the provided API (what and why)
\end_layout

\begin_layout Paragraph
High-Level Design Decisions and Modularity
\end_layout

\begin_layout Standard
First, you will document the main organization of modules and data in your
 system.
\end_layout

\begin_layout Subsection
Question 1 (LG1, LG2, LG3, LG5): Describe your overall implementation of
 the OrderManager and ItemSupplier, including the following aspects in your
 answer:
\end_layout

\begin_layout Subsubsection
(1) Considering your use of logging, what RPC semantics are effectively
 implemented between clients and OrderManager or ItemSupplier? What RPC
 semantics are effectively implemented between OrderManager and ItemSupplier?
 Explain.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
What is it they really want to know?
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
(1) How did you make workflow processing asynchronous at the OrderManager?
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
- Explain  short the idea/concept
\end_layout

\begin_layout Plain Layout
- Show figure and talk about the concrete design
\end_layout

\begin_layout Plain Layout
+ How exactly does this design make the OrderManager workflow processing
 asynchronous?
\end_layout

\begin_layout Plain Layout
+ Make a note on the assumptions on why a thread only works on one workflow
 and no other touches this.
\end_layout

\begin_layout Plain Layout
- Make a note on the possible performance concern in this design
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
(1) How did you handle failures of individual components? In particular,
 how do you handle failure propagation?
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
WORK (add failure handling and propagation)
\end_layout

\begin_layout Plain Layout
- I don't at the moment..
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Atomicity and Fault-Tolerance
\end_layout

\begin_layout Standard
Now, you will argue for your implementation and testing choices regarding
 atomicity and fault-tolerance.
\end_layout

\begin_layout Subsection
Question 2 (LG3, LG4, LG5): An ItemSupplier executes operations originated
 at multiple instances of OrderManager as well as local clients.
 Describe how you ensured atomicity of these operations.
 In particular, mention the following aspects in your answer:
\end_layout

\begin_layout Standard
NOTE: The method you design for atomicity does not need to be complex, as
 long as you argue convincingly for its correctness, its trade-off in complexity
 of implementation and performance, and how it fits in the system as a whole.
\end_layout

\begin_layout Subsubsection
(1) Which method did you use for ensuring serializability at each item supplier
 (e.g., locking, optimistic approach, or simple queueing of operations)? Describe
 your method at a high level.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
WORK (add locking/or what ever in the item Supplier AND the OrderManager
 (even though the question only asks to ItemSupplier))
\end_layout

\begin_layout Plain Layout
- I don't at the moment..
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
(1) Argue for the correctness of your method; to do so, show how your method
 is logically equivalent to a trivial solution based on a single global
 lock or to a well-known locking protocol (e.g., a variant of two-phase locking).
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
See note above
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
(2) Argue for the performance of your method; to do so, explain your assumptions
 about the workload the service is exposed to and why you believe other
 alternatives you considered (e.g.., locking, optimistic approach, or simple
 queueing of operations) would be better or worse than your choice.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
See note above
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Question 3 (LG4, LG5): In your implementation, you were not required to
 implement a procedure for log-based recovery of individual components.
 Explain how you would recover from a failure of:
\end_layout

\begin_layout Standard
For each of the two scenarios, explain any necessary interaction with other
 components to achieve recovery by replaying the log.
 Also explain how you would use the log during recovery, i.e., how is the
 information in the log used to rebuild data structures in main memory,
 and why is it sufficient.
\end_layout

\begin_layout Subsubsection
(1) an OrderManager
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
- How would I do it?
\end_layout

\begin_layout Plain Layout
+ What state must be restored? Assuming an OrderManager failed and is now
 trying to recover?
\end_layout

\begin_layout Plain Layout
+ What (minimum amount of) information is needed to recover?
\end_layout

\begin_layout Plain Layout
+ Make note on the look of the log file -> I have more info than needed
 (reason-> to make it more readable and debug-able)
\end_layout

\begin_layout Plain Layout
++ Show how should it look like in a deployed version
\end_layout

\begin_layout Plain Layout
+ How would I use the log to recover? How technically would I do it?
\end_layout

\begin_layout Plain Layout
++ Show some pseudocode?
\end_layout

\begin_layout Plain Layout
+++ Implement it?
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
(1) an ItemSupplier
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
- How would I do it?
\end_layout

\begin_layout Plain Layout
+ What state must be restored? Assuming an ItemSupplier failed and is now
 trying to recover?
\end_layout

\begin_layout Plain Layout
+ What (minimum amount of) information is needed to recover?
\end_layout

\begin_layout Plain Layout
+ Make note on the look of the log file -> I have more info than needed
 (reason-> to make it more readable and debug-able)
\end_layout

\begin_layout Plain Layout
++ Show how should it look like in a deployed version
\end_layout

\begin_layout Plain Layout
+ How would I use the log to recover? How technically would I do it?
\end_layout

\begin_layout Plain Layout
++ Show some pseudocode?
\end_layout

\begin_layout Plain Layout
+++ Implement it?
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Testing
\end_layout

\begin_layout Subsection
Question 4 (LG4, LG5): Describe your high-level strategy to test your implementa
tion.
 In particular, mention the following aspects in your answer:
\end_layout

\begin_layout Subsubsection
(1) How you tested execution of workflows by the OrderManager, considering
 asynchronicity of execution.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
- Explain how I decided to test my OrderManager implementation
\end_layout

\begin_layout Plain Layout
+ How I assert the state, and when I do that, and why (why do I wait)
\end_layout

\begin_layout Plain Layout
- Explain the 'valid' tests
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
(1) How you tested that operations were indeed atomic at the ItemSupplier.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
WORK? -> I guess, I need some tests that tries to show that my locking protocols
 work
\end_layout

\begin_layout Plain Layout
- How have I done that?
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
(1) How you tested error conditions and failures of the multiple components.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
- Describe how I have done that? What is my overall strategy and 'fremgang'
 when testing this (<- exception testing)
\end_layout

\begin_layout Plain Layout
- Describe how my failure tests works and my strategy (<- failure testing)
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Experiments
\end_layout

\begin_layout Standard
Finally, you will evaluate the scalability of one component of your system
 experimentally.
\end_layout

\begin_layout Subsection
Question 5 (LG6): Design, describe the setup for, and execute an experiment
 that shows how well your implementation of a single ItemSupplier behaves
 as concurrency is increased.
 You will need to argue for a basic workload mix involving calls from order
 managers as well as local clients.
 Given a mix, you should report how the throughtput of the service scales
 as more local clients / order managers are added.
 Remember to thoroughly document your setup.
 In particular, mention the following aspects in your answer:
\end_layout

\begin_layout Subsubsection
(2) Setup: Document the hardware, data size and distribution, and workload
 characteristics you have used to make your measurements.
 In addition, describe your measurement procedure, e.g., procedure to generate
 workload calls, use of timers, and numbers of repetitions, along with short
 arguments for your decisions.
 Also make sure to document your hardware configuration and how you expect
 this configuration to affect the scalability results you obtain.
\end_layout

\begin_layout Subsubsection
(1, + Figure) Results: According to your setup, show a graph with your throughpu
t measurements for a single ItemSupplier on the y-axis and the number of
 local clients / order managers on the x-axis, maintaining the workload
 mix you argued for in your setup.
 How does the observed throughput scale with the number of local clients
 / order managers? Describe the trends observed and any other effects.
 Explain why you observe these trends and how much that matches your expectation
s.
\end_layout

\end_body
\end_document
